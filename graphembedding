# This is an example of a directed graph embedding constructed using ideas similar to L_{2,d}-spectral radius dimensionality reduction.

list=[];
n=100;
d=10;
for i in 1:100
push!(list,[rand(1:n),rand(1:n),rand(1:n)]);
end;

matrixtable=[];
for i in 1:n
push!(matrixtable,randn(ComplexF64,d,d));
end;


score=function(matrixtable)
topsum=zeros(ComplexF64,d,d);
bottomsum=zeros(ComplexF64,d,d);
for i in 1:n
bottomsum+=matrixtable[i]*adjoint(matrixtable[i]);
for a in list[i]
topsum+=matrixtable[i]*matrixtable[a];
end;
end;
return log(norm(topsum))-log(norm(bottomsum));
end;

rate=0.001;

while true
matrixtable+=rate*gradient(score,matrixtable);
display(score(matrixtable));
end;
