#hi
n=10;
d=5;
k=3;
aa=[];
bb=[];
for i in 1:k
push!(aa,randn(ComplexF64,n,n));
push!(bb,randn(ComplexF64,d,d));
end;

u=randn(ComplexF64,n,d);
v=randn(ComplexF64,n,d);

lambda=0;
for iak in 1:10000
newu=u*0;
newv=v*0;
for i in 1:k
newv+=aa[i]*v*adjoint(bb[i]);
newu+=adjoint(aa[i])*u*bb[i];
end;
lambda=dot(v,newv);
u=newu/norm(newu);
v=newv/norm(newv);
end;

 function rad(x) return maximum(abs.(eigvals(x))); end;
 
 function sr(aa,bb)
 cc=kron(aa[1],adjoint(transpose(bb[1])));
 for i in 2:k
 cc+=kron(aa[i],adjoint(transpose(bb[i])));
 end;
 return log(rad(cc));
 end;
 
gradient(sr,aa,bb)[1][1]-u*bb[1]*adjoint(v)*dot(u,v)*lambda/abs(dot(u,v)*lambda)^2;
gradient(sr,aa,bb)[2][1]-adjoint(u)*aa[1]*v*adjoint(lambda)*dot(v,u)/abs(lambda*dot(v,u))^2;

toplefteigvec=randn(ComplexF64,n,d);
toprighteigvec=randn(ComplexF64,n,d);

bottomlefteigvec=randn(ComplexF64,d,d);
bottomrighteigvec=randn(ComplexF64,d,d);

rate=0.01;
grad=bb*0;
while true

newtoplefteigvec=toplefteigvec*0;
newtoprighteigvec=toprighteigvec*0;
newbottomlefteigvec=bottomlefteigvec*0;
newbottomrighteigvec=bottomrighteigvec*0;
for i in 1:k
newtoprighteigvec+=aa[i]*toprighteigvec*adjoint(bb[i]);
newtoplefteigvec+=adjoint(aa[i])*toplefteigvec*bb[i];
newbottomrighteigvec+=bb[i]*bottomrighteigvec*adjoint(bb[i]);
newbottomlefteigvec+=adjoint(bb[i])*bottomlefteigvec*bb[i];
end;
toplambda=dot(toprighteigvec,newtoprighteigvec);
bottomlambda=dot(bottomrighteigvec,newbottomrighteigvec);

toplefteigvec=newtoplefteigvec/norm(newtoplefteigvec);
toprighteigvec=newtoprighteigvec/norm(newtoprighteigvec);
bottomlefteigvec=newbottomlefteigvec/norm(newbottomlefteigvec);
bottomrighteigvec=newbottomrighteigvec/norm(newbottomrighteigvec);

for i in 1:k
grad[i]*=0.95*grad[i];
grad[i]+=0.05*adjoint(toplefteigvec)*bb[i]*toprighteigvec*adjoint(toplambda)*dot(toprighteigvec,toplefteigvec)/abs(toplambda*dot(toprighteigvec,toplefteigvec))^2
grad[i]-=0.05*aa[i]*adjoint(bottomrighteigvec)*dot(bottomlefteigvec,bottomrighteigvec)*bottomlambda/abs(dot(bottomlefteigvec,bottomrighteigvec)*bottomlambda)^2;
grad[i]-=0.05*adjoint(bottomlefteigvec)*aa[i]*bottomrighteigvec*adjoint(bottomlambda)*dot(bottomrighteigvec,bottomlefteigvec)/abs(bottomlambda*dot(bottomrighteigvec,bottomlefteigvec))^2;
#bb[i]+=rate*grad[i];
end;
bb/=mean(norm.(bb));
end;
